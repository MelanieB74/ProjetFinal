package com.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.model.Activite;
import com.model.Service.ActiviteServiceImpl;
import com.model.Service.IActiviteService;


@RestController
@CrossOrigin
@RequestMapping("/activite") 
public class ActiviteController {
	
	@Autowired
    IActiviteService activiteService;

    public ActiviteController(ActiviteServiceImpl activiteServiceImpl) {
        activiteService = activiteServiceImpl;
    }
    
    @RequestMapping(value = "/createActivite", method = RequestMethod.POST)
    public ResponseEntity<Activite> createActivite(@RequestBody Activite Activite) {
            ActiviteService.save(Activite);
            return new ResponseEntity<Activite>(Activite, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/updateActivite", method = RequestMethod.PUT, produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<Activite> updateActivite(@RequestBody Activite Activite) {
        ActiviteService.update(Activite);
        return new ResponseEntity<Activite>(Activite, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/deleteActivite", method = RequestMethod.DELETE, produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<Activite> deleteActivite(@RequestBody Activite Activite) {
        ActiviteService.delete(Activite);
        return new ResponseEntity<Activite>(Activite, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/Activites/all", method = RequestMethod.GET)
    public List<Activite> getAllActivites() {
        return ActiviteService.findAll();
}
    @GetMapping("/Activites/{id}")
    public Activite findActiviteById (@RequestBody Activite Activite, @PathVariable int id) {
        if(ActiviteService.findById(id) == null) {
            return null;
        } else {
            return ActiviteService.findById(id);
        }
    }
    
//    @GetMapping("/Activites/{nom}")
//    public Activite findActiviteByNom (@RequestBody Activite Activite, @PathVariable String nom) {
//        if(ActiviteService.findByNom(nom) == null) {
//            return null;
//        } else {
//            return ActiviteService.findByNom(nom);
//        }
//    }

}
