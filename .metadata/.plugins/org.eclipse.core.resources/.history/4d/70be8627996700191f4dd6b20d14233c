package com.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.model.Employe;
import com.model.Service.EmployeServiceImpl;
import com.model.Service.IEmployeService;



@RestController
@CrossOrigin
@RequestMapping("/WSEmploye") 
public class EmployeController {
	
	@Autowired
    IEmployeService employeService;

    public EmployeController(EmployeServiceImpl employeServiceImpl) {
        employeService = employeServiceImpl;
    }
    
    @RequestMapping(value = "/createEmploye", method = RequestMethod.POST)
    public ResponseEntity<Employe> createUser(@RequestBody Employe employe) {
            employeService.save(employe);
            return new ResponseEntity<Employe>(employe, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/updateEmploye", method = RequestMethod.PUT, produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<Employe> updateEmploye(@RequestBody Employe employe) {
        employeService.update(employe);
        return new ResponseEntity<Employe>(employe, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/deleteEmploye", method = RequestMethod.DELETE, produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<Employe> deleteEmploye(@RequestBody Employe employe) {
        employeService.delete(employe);
        return new ResponseEntity<Employe>(employe, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/employes/all", method = RequestMethod.GET)
    public List<Employe> getAllEmployes() {
        return employeService.findAll();
}
    @GetMapping("/employes/{id}")
    public Employe findEmployeById (@RequestBody Employe employe, @PathVariable int id) {
        if(employeService.findById(id) == null) {
            return null;
        } else {
            return employeService.findById(id);
        }
    }
    
    @GetMapping("/employes/{nom}")
    public Employe findEmployeByNom (@RequestBody Employe employe, @PathVariable String nom) {
        if(employeService.findByNom(nom) == null) {
            return null;
        } else {
            return employeService.findByNom(nom);
        }
    }

}
